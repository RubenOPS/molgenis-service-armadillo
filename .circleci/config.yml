# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

jobs:
  build:
    docker:
      - image: eclipse-temurin:17.0.9_9-jdk-jammy

    working_directory: ~/repo
    resource_class: large

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - run:
          name: update package manager
          command: apt-get update

      - run:
          name: add packages for docker cli install
          command: apt-get -y install gnupg lsb-release curl

      - run:
          name: update packages again
          command: apt-get update

      - run:
          name: set repo keys for docker packages
          command: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

      - run:
          name: add repo for docker packages
          command: echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

      - run:
          name: update package manager again
          command: apt-get update

      - run:
          name: Install Docker client
          command: apt-get -y install docker-ce docker-ce-cli containerd.io

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      - run:
          name: Sign in to docker
          command: docker login -u $DOCKER_NAME -p $DOCKER_PASS

      - run:
          name: Setup git
          command: |
            git config --global --add safe.directory '*'
            git config user.email "molgenis@gmail.com"
            git config user.name "molgenis-jenkins"
            git config url.https://.insteadOf git://

      - run:
          name: build, test, push docker
          command: |
            ./gradlew test jacocoMergedReport sonar \
            -Dsonar.login=${SONAR_TOKEN} -Dsonar.organization=molgenis -Dsonar.host.url=https://sonarcloud.io

      - store_artifacts:
          path: build/libs

      - run:
          name: Build Armadillo and R CICD image
          command: |
            ./gradlew docker
            ./docker/bin/prepare.bash ci

      - run:
          name: Make sure all images declared in docker-compose.yml are available and ready
          command: |
            cd /home/circleci/repo/build/docker/armadillo-compose

            docker images ls
            docker-compose up -d
            docker images ls

      - run:
          name: Start docker-compose and wait for `release-test.R` to finish
          command: |
            # FIXME: make this name not directory dependent
            ARMADILLO="armadillo-compose-armadillo-1"

            cd /home/circleci/repo/build/docker/armadillo-compose

            docker-compose up -d
            docker ps


            # 1 CircleCI docker in docker workaround
            docker cp ./armadillo/config $ARMADILLO:/config
            docker cp ./armadillo/data   $ARMADILLO:/data
            docker cp ./armadillo/logs   $ARMADILLO:/logs
            # .1 CircleCI docker in docker workaround

            # Poll to see Armadillo is up
            docker container run --network container:$ARMADILLO \
              docker.io/jwilder/dockerize \
              -wait http://localhost:8080/ \
              -wait-retry-interval 20s \
              -timeout 30s || echo "Timed out"

            cd /home/circleci/repo/build/docker/cicd

            # Run release-test.R
            docker container run \
              --network container:$ARMADILLO \
              --interactive --tty \
              --entrypoint /bin/bash molgenis/r-cicd -c "cd /cicd/scripts/release ; ./armadillo-ready.bash"

            cd /home/circleci/repo/build/docker/armadillo-compose

            # 2 CircleCI docker in docker workaround
            # See what changed within Armadillo
            docker cp $ARMADILLO:/logs   ./armadillo/logs
            # .2 CircleCI docker in docker workaround

            docker container ls
            docker compose down
            docker images ls
            docker compose rm

      - store_artifacts:
          path: build/libs

      - run:
          name: Zip armadillo-compose
          command: |
            mkdir build/artifacts
            zip -r build/artifacts/armadillo-compose.zip build/docker/armadillo-compose

      - store_artifacts:
          path: build/artifacts/armadillo-compose.zip


workflows:
  build-deploy:
    jobs:
      - build
